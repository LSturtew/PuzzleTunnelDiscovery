# External project
include(ExternalProject)
set(EXTERNAL_PROJECTS_PREFIX ${CMAKE_BINARY_DIR}/external)
set(EXTERNAL_PROJECTS_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/installed)

ExternalProject_Add(ext_fcl
	PREFIX ${EXTERNAL_PROJECTS_PREFIX}
	SOURCE_DIR ${CMAKE_SOURCE_DIR}/third-party/fcl/
	CMAKE_ARGS -DCMAKE_BUILD_TYPE=Release -DFCL_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=${EXTERNAL_PROJECTS_INSTALL_PREFIX}
	BUILD_COMMAND make -j ${NCPU})
set(INSTALLED_PKG_CONFIG "${EXTERNAL_PROJECTS_INSTALL_PREFIX}/lib64/pkgconfig:${EXTERNAL_PROJECTS_INSTALL_PREFIX}/lib/pkgconfig")
set(ENV{PKG_CONFIG_PATH} "${INSTALLED_PKG_CONFIG}:$ENV{PKG_CONFIG_PATH}")

function(use_fcl TGT)
	add_dependencies(${TGT} ext_fcl)
	target_include_directories("${TGT}" BEFORE PRIVATE ${EXTERNAL_PROJECTS_INSTALL_PREFIX}/include)
	target_link_directories("${TGT}" BEFORE PRIVATE ${EXTERNAL_PROJECTS_INSTALL_PREFIX}/lib ${EXTERNAL_PROJECTS_INSTALL_PREFIX}/lib64)
	target_link_libraries("${TGT}" PRIVATE fcl)
endfunction()

ExternalProject_Add(ext_ompl_app
	PREFIX ${EXTERNAL_PROJECTS_PREFIX}
	SOURCE_DIR ${CMAKE_SOURCE_DIR}/third-party/ompl.app/
	CMAKE_ARGS -E env PKG_CONFIG_PATH=$ENV{PKG_CONFIG_PATH} ${CMAKE_COMMAND} -DOMPL_BUILD_DEMOS=OFF -DOMPL_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${EXTERNAL_PROJECTS_INSTALL_PREFIX} -DCMAKE_PREFIX_PATH=${EXTERNAL_PROJECTS_INSTALL_PREFIX}:${INSTALLED_PKG_CONFIG} -DCMAKE_INSTALL_MESSAGE=LAZY
	BUILD_COMMAND make -j ${NCPU} ompl ompl_app_base
	BUILD_ALWAYS 1
	)
add_dependencies(ext_ompl_app ext_fcl)

function(use_ompl TGT)
	add_dependencies(${TGT} ext_ompl_app)
	target_include_directories("${TGT}" BEFORE PRIVATE ${EXTERNAL_PROJECTS_INSTALL_PREFIX}/include)
	target_link_directories("${TGT}" BEFORE PRIVATE ${EXTERNAL_PROJECTS_INSTALL_PREFIX}/lib ${EXTERNAL_PROJECTS_INSTALL_PREFIX}/lib64)
	target_link_libraries("${TGT}" PRIVATE ompl)
endfunction()

ExternalProject_Add(ext_libgeokey
	PREFIX ${EXTERNAL_PROJECTS_PREFIX}
	SOURCE_DIR ${CMAKE_SOURCE_DIR}/third-party/libgeokey/
	CMAKE_ARGS -DBUILD_VISUALIZER=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${EXTERNAL_PROJECTS_INSTALL_PREFIX}
	BUILD_COMMAND make -j ${NCPU}
	BUILD_ALWAYS 1)

